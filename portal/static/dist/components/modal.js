function trapFocus(container) {const focusable = container.querySelectorAll('a, button, input, select, textarea, [tabindex]:not([tabindex="-1"])');if (!focusable.length) return () => {};const first = focusable[0];const last = focusable[focusable.length - 1];function handle(e) {if (e.key === 'Tab') {if (e.shiftKey && document.activeElement === first) {e.preventDefault();last.focus();} else if (!e.shiftKey && document.activeElement === last) {e.preventDefault();first.focus();}}}container.addEventListener('keydown', handle);return () => container.removeEventListener('keydown', handle);}function createModal(options = {}) {const { title, content, confirmText, cancelText, onConfirm, size } = options;const overlay = document.createElement('div');overlay.className = 'modal-overlay';const dialog = document.createElement('div');dialog.className = 'modal';if (size === 'xl') dialog.classList.add('modal-xl');dialog.setAttribute('role', 'dialog');dialog.setAttribute('aria-modal', 'true');dialog.innerHTML = `<div class="modal-header"><h2 class="modal-title">${title || ''}</h2><button class="modal-close" aria-label="Close">&times;</button></div><div class="modal-body">${content || ''}</div>${confirmText || cancelText ? `<div class="modal-footer"></div>` : ''}`;overlay.appendChild(dialog);document.body.appendChild(overlay);const footer = dialog.querySelector('.modal-footer');let confirmBtn, cancelBtn;if (footer) {if (cancelText) {cancelBtn = document.createElement('button');cancelBtn.className = 'btn btn-secondary';cancelBtn.textContent = cancelText;footer.appendChild(cancelBtn);}if (confirmText) {confirmBtn = document.createElement('button');confirmBtn.className = 'btn btn-primary';confirmBtn.textContent = confirmText;footer.appendChild(confirmBtn);}}function close() {removeTrap();document.removeEventListener('keydown', onKey);overlay.remove();if (previous && previous.focus) previous.focus();}function onKey(e) {if (e.key === 'Escape') close();}overlay.addEventListener('click', (e) => {if (e.target === overlay) close();});document.addEventListener('keydown', onKey);const removeTrap = trapFocus(dialog);const previous = document.activeElement;dialog.querySelector('.modal-close').addEventListener('click', close);if (cancelBtn) cancelBtn.addEventListener('click', close);if (confirmBtn)confirmBtn.addEventListener('click', () => {if (onConfirm) onConfirm();close();});setTimeout(() => {const focusEl = dialog.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');if (focusEl) focusEl.focus();});return { close, overlay };}export function confirmationModal(message, onConfirm, title = 'Confirm') {return createModal({title,content: `<p>${message}</p>`,confirmText: 'Confirm',cancelText: 'Cancel',onConfirm,});}export function xlModal(title, content) {return createModal({ title, content, size: 'xl' });}export default { confirmationModal, xlModal };