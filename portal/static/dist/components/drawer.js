// Right-side drawer component with focus trappingfunction trapFocus(container) {const focusable = container.querySelectorAll('a, button, input, select, textarea, [tabindex]:not([tabindex="-1"])');if (!focusable.length) return () => {};const first = focusable[0];const last = focusable[focusable.length - 1];function handle(e) {if (e.key === 'Tab') {if (e.shiftKey && document.activeElement === first) {e.preventDefault();last.focus();} else if (!e.shiftKey && document.activeElement === last) {e.preventDefault();first.focus();}}}container.addEventListener('keydown', handle);return () => container.removeEventListener('keydown', handle);}export function openDrawer(content) {const overlay = document.createElement('div');overlay.className = 'drawer-overlay';const panel = document.createElement('div');panel.className = 'drawer';panel.innerHTML = content;panel.setAttribute('tabindex', '-1');overlay.appendChild(panel);document.body.appendChild(overlay);function close() {removeTrap();document.removeEventListener('keydown', onKey);overlay.remove();if (previous && previous.focus) previous.focus();}function onKey(e) {if (e.key === 'Escape') close();}overlay.addEventListener('click', (e) => {if (e.target === overlay) close();});document.addEventListener('keydown', onKey);const removeTrap = trapFocus(panel);const previous = document.activeElement;// trigger animationrequestAnimationFrame(() => panel.classList.add('open'));panel.focus();return { close, overlay };}export default { openDrawer };